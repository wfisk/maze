{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Maze.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let name;\n\n  import 'bulma/css/bulma.css'\n  import { Button } from 'svelma' \n  import Maze from './Maze.svelte';\n</script>\n\n<style>\n\th1 {\n\t\tcolor: purple;\n\t}\n</style>\n\n<div class=\"container\">\n\n  <nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n    <div class=\"navbar-brand\">\n      <a class=\"navbar-item\" href=\"https://bulma.io\">\n        <img src=\"https://bulma.io/images/bulma-logo.png\" width=\"112\" height=\"28\" alt=\"bulma-logo\">\n      </a>\n\n      <button role=\"button\" class=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n        <span aria-hidden=\"true\"></span>\n      </button>\n    </div>\n\n    <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n      <div class=\"navbar-start\">\n        <button class=\"navbar-item button is-text\">\n          Home\n        </button>\n\n        <span class=\"navbar-item\">\n          Documentation\n        </span>\n\n        <div class=\"navbar-item has-dropdown is-hoverable\">\n          <span class=\"navbar-link\">\n            More\n          </span>\n\n          <div class=\"navbar-dropdown\">\n            <span class=\"navbar-item\">\n              About\n            </span>\n            <span class=\"navbar-item\">\n              Jobs\n            </span>\n            <span class=\"navbar-item\">\n              Contact\n            </span>\n            <hr class=\"navbar-divider\">\n            <span class=\"navbar-item\">\n              Report an issue\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"navbar-end\"  >\n        <div class=\"navbar-item\">\n          <div class=\"buttons\">\n            <span class=\"button is-primary\">\n              <strong>Sign up</strong>\n            </span>\n            <span class=\"button is-light\">\n              Log in now\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n\n  <section class=\"section\">\n      <h1 class=\"title\">Maze</h1>\n      <h2 class=\"subtitle\">\n        A simple container to divide your page into <strong>sections</strong>, like the one you're currently reading\n      </h2>\n      <Button>Hello</Button>\n\n      <Maze />\n  </section>\n\n</div>\n\n\n",
    "<script>\n  import { scaleLinear } from 'd3-scale';\n  import { mazeGrid } from './stores/maze-grid.js';\n\n\tconst points = [\n\t\t{ year: 1990, birthrate: 16.7 },\n\t\t{ year: 1995, birthrate: 14.6 },\n\t\t{ year: 2000, birthrate: 14.4 },\n\t\t{ year: 2005, birthrate: 14 },\n\t\t{ year: 2010, birthrate: 13 },\n\t\t{ year: 2015, birthrate: 12.4 }\n\t];\n\n\tconst xTicks = [1990, 1995, 2000, 2005, 2010, 2015];\n\tconst yTicks = [0, 5, 10, 15, 20];\n\tconst padding = { top: 20, right: 15, bottom: 20, left: 25 };\n\n\tlet width = 500;\n\tlet height = 200;\n\n\tfunction formatMobile(tick) {\n\t\treturn \"'\" + tick % 100;\n\t}\n\n\t$: xScale = scaleLinear()\n\t\t.domain([0, xTicks.length])\n\t\t.range([padding.left, width - padding.right]);\n\n\t$: yScale = scaleLinear()\n\t\t.domain([0, Math.max.apply(null, yTicks)])\n\t\t.range([height - padding.bottom, padding.top]);\n\n\t$: innerWidth = width - (padding.left + padding.right);\n  $: barWidth = innerWidth / xTicks.length;\n  \n\n  mazeGrid.setRowCount( 10 );\n  mazeGrid.setColumnCount( 10 );\n\n  $: console.log( $mazeGrid );\n\n\n</script>\n\n<style>\n\th2 {\n\t\ttext-align: center;\n\t}\n\n\t.chart {\n\t\twidth: 100%;\n\t\tmax-width: 500px;\n\t\tmargin: 0 auto;\n\t}\n\n\tsvg {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 200px;\n\t}\n\n\t.tick {\n\t\tfont-family: Helvetica, Arial;\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #e2e2e2;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #ccc;\n\t\ttext-anchor: start;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.x-axis .tick text {\n\t\ttext-anchor: middle;\n\t}\n\n\t.bars rect {\n\t\tfill: #a11;\n\t\tstroke: none;\n\t\topacity: 0.65;\n\t}\n\n  .column line,\n  .row line {\n\t\tstroke: #333;\n\t}\n\n</style>\n\n<h2>US birthrate by year</h2>\n<h2>{$mazeGrid.rowCount}</h2>\n\n\n\n<div class=\"chart\" bind:clientWidth={width} bind:clientHeight={height}>\n\t<svg>\n\t\t<!-- y axis -->\n\t\t<g class=\"axis y-axis\" transform=\"translate(0,{padding.top})\">\n\t\t\t{#each yTicks as tick}\n\t\t\t\t<g class=\"tick tick-{tick}\" transform=\"translate(0, {yScale(tick) - padding.bottom})\">\n\t\t\t\t\t<line x2=\"100%\"></line>\n\t\t\t\t\t<text y=\"-4\">{tick} {tick === 20 ? ' per 1,000 population' : ''}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- x axis -->\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each points as point, i}\n\t\t\t\t<g class=\"tick\" transform=\"translate({xScale(i)},{height})\">\n\t\t\t\t\t<text x=\"{barWidth/2}\" y=\"-4\">{width > 380 ? point.year : formatMobile(point.year)}</text>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<g class='bars'>\n\t\t\t{#each points as point, i}\n\t\t\t\t<rect\n\t\t\t\t\tx=\"{xScale(i) + 2}\"\n\t\t\t\t\ty=\"{yScale(point.birthrate)}\"\n\t\t\t\t\twidth=\"{barWidth - 4}\"\n\t\t\t\t\theight=\"{height - padding.bottom - yScale(point.birthrate)}\"\n\t\t\t\t></rect>\n\t\t\t{/each}\n\t\t</g>\n  </svg>\n  \n\t<svg>\n\t\t<!-- Grid Lines - Vertical -->\n\t\t<g class=\"axis y-axis\">\n\t\t\t{#each $mazeGrid.columns as column}\n\t\t\t\t<g class=\"column column-{column}\" transform=\"translate(0, {column*20})\">\n\t\t\t\t\t<line x2=\"100%\"></line>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<!-- Grid Lines - Horizontal -->\n\t\t<g class=\"axis x-axis\">\n\t\t\t{#each $mazeGrid.rows as row}\n\t\t\t\t<g class=\"row row-{row}\" transform=\"translate({row*20},0)\">\n\t\t\t\t\t<line y2=\"100%\"></line>\n\t\t\t\t</g>\n\t\t\t{/each}\n\t\t</g>\n\n\t\t<g class='bars'>\n\t\t\t{#each points as point, i}\n\t\t\t\t<rect\n\t\t\t\t\tx=\"{xScale(i) + 2}\"\n\t\t\t\t\ty=\"{yScale(point.birthrate)}\"\n\t\t\t\t\twidth=\"{barWidth - 4}\"\n\t\t\t\t\theight=\"{height - padding.bottom - yScale(point.birthrate)}\"\n\t\t\t\t></rect>\n\t\t\t{/each}\n\t\t</g>\n\t</svg>\n\n</div>"
  ],
  "names": [],
  "mappings": "AASC,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,MAAM,AACd,CAAC;ACkCD,EAAE,eAAC,CAAC,AACH,UAAU,CAAE,MAAM,AACnB,CAAC,AAED,MAAM,eAAC,CAAC,AACP,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AAED,GAAG,eAAC,CAAC,AACJ,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACd,CAAC,AAED,KAAK,eAAC,CAAC,AACN,WAAW,CAAE,SAAS,CAAC,CAAC,KAAK,CAC7B,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACX,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,CAAC,AACpB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACX,IAAI,CAAE,IAAI,CACV,WAAW,CAAE,KAAK,AACnB,CAAC,AAED,KAAK,sBAAO,CAAC,IAAI,eAAC,CAAC,AAClB,gBAAgB,CAAE,CAAC,AACpB,CAAC,AAED,sBAAO,CAAC,KAAK,CAAC,IAAI,eAAC,CAAC,AACnB,WAAW,CAAE,MAAM,AACpB,CAAC,AAED,oBAAK,CAAC,IAAI,eAAC,CAAC,AACX,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,AACd,CAAC,AAEA,sBAAO,CAAC,mBAAI,CACZ,mBAAI,CAAC,IAAI,eAAC,CAAC,AACX,MAAM,CAAE,IAAI,AACb,CAAC"
}